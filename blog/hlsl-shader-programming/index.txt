1:HL["/_next/static/css/92c5c572fa451d95.css","style",{"crossOrigin":""}]
0:["b4wKCJ_OP9rUcyO_ZSaBt",[[["",{"children":["blog",{"children":["hlsl-shader-programming",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/92c5c572fa451d95.css","precedence":"next","crossOrigin":""}]],"$L3"]]]]
4:I[6954,[],""]
5:I[7264,[],""]
7:I[5846,["350","static/chunks/350-cb3df608d45f4628.js","613","static/chunks/app/blog/hlsl-shader-programming/page-26e4012009aab29a.js"],""]
8:I[8326,["350","static/chunks/350-cb3df608d45f4628.js","613","static/chunks/app/blog/hlsl-shader-programming/page-26e4012009aab29a.js"],""]
9:I[4946,["350","static/chunks/350-cb3df608d45f4628.js","613","static/chunks/app/blog/hlsl-shader-programming/page-26e4012009aab29a.js"],""]
2:[null,["$","html",null,{"lang":"zh-CN","children":["$","body",null,{"children":["$","div",null,{"className":"min-h-screen","children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","hlsl-shader-programming","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L6",[["$","$L7",null,{}],["$","main",null,{"className":"min-h-screen","children":[["$","section",null,{"className":"bg-black/40 border-b border-white/10 py-12","children":["$","div",null,{"className":"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8","children":[["$","div",null,{"className":"mb-8","children":["$","$L8",null,{"href":"/blog","className":"inline-flex items-center text-gray-200 hover:text-white transition-colors","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":20,"height":20,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"mr-2","children":[["$","path","1l729n",{"d":"m12 19-7-7 7-7"}],["$","path","x3x0zl",{"d":"M19 12H5"}],"$undefined"]}],"返回博客列表"]}]}],["$","div",null,{"className":"mb-4","children":["$","span",null,{"className":"inline-block bg-white/10 text-gray-200 px-3 py-1 rounded-full text-sm font-medium","children":"HLSL"}]}],["$","h1",null,{"className":"text-4xl font-bold text-white mb-6","children":"HLSL着色器编程技巧"}],["$","div",null,{"className":"flex items-center space-x-6 text-gray-400 mb-8","children":[["$","div",null,{"className":"flex items-center space-x-2","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":18,"height":18,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-user","children":[["$","path","975kel",{"d":"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"}],["$","circle","17ys0d",{"cx":"12","cy":"7","r":"4"}],"$undefined"]}],["$","span",null,{"children":"HGL"}]]}],["$","div",null,{"className":"flex items-center space-x-2","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":18,"height":18,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"2024年1月5日"}]]}],["$","div",null,{"className":"flex items-center space-x-2","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":18,"height":18,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-clock","children":[["$","circle","1mglay",{"cx":"12","cy":"12","r":"10"}],["$","polyline","68esgv",{"points":"12 6 12 12 16 14"}],"$undefined"]}],["$","span",null,{"children":"8分钟阅读"}]]}]]}],["$","div",null,{"className":"flex items-center space-x-2","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":18,"height":18,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"text-gray-400","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex space-x-2","children":[["$","span","HLSL",{"className":"bg-white/10 text-gray-200 px-3 py-1 rounded-full text-sm","children":"HLSL"}],["$","span","着色器",{"className":"bg-white/10 text-gray-200 px-3 py-1 rounded-full text-sm","children":"着色器"}],["$","span","光照",{"className":"bg-white/10 text-gray-200 px-3 py-1 rounded-full text-sm","children":"光照"}]]}]]}]]}]}],["$","section",null,{"className":"py-12","children":["$","div",null,{"className":"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8","children":["$","div",null,{"className":"bg-black/40 rounded-3xl shadow-lg border border-white/10 p-8 glass-highlight glass-noise","children":["$","div",null,{"className":"prose max-w-none","children":[["$","h2",null,{"children":"HLSL着色器编程基础"}],["$","p",null,{"children":"HLSL（High Level Shading Language）是微软为DirectX开发的着色器语言。 它允许开发者编写运行在GPU上的程序，实现各种视觉效果。本文将分享一些实用的HLSL编程技巧。"}],["$","h3",null,{"children":"基础光照模型"}],["$","p",null,{"children":"让我们从经典的Phong光照模型开始："}],["$","$L9",null,{"language":"hlsl","code":"// Phong光照模型\nstruct LightData {\n    float3 position;\n    float3 color;\n    float3 ambient;\n    float intensity;\n};\n\nstruct MaterialData {\n    float3 diffuse;\n    float3 specular;\n    float shininess;\n};\n\nfloat3 CalculatePhongLighting(float3 worldPos, float3 normal, float3 viewDir,\n                             LightData light, MaterialData material) {\n    // 环境光\n    float3 ambient = light.ambient * material.diffuse;\n    \n    // 漫反射\n    float3 lightDir = normalize(light.position - worldPos);\n    float NdotL = max(0.0, dot(normal, lightDir));\n    float3 diffuse = light.color * material.diffuse * NdotL * light.intensity;\n    \n    // 镜面反射\n    float3 reflectDir = reflect(-lightDir, normal);\n    float RdotV = max(0.0, dot(reflectDir, viewDir));\n    float spec = pow(RdotV, material.shininess);\n    float3 specular = light.color * material.specular * spec * light.intensity;\n    \n    return ambient + diffuse + specular;\n}"}],["$","h3",null,{"children":"PBR材质系统"}],["$","p",null,{"children":"现代游戏更多使用基于物理的渲染（PBR）："}],["$","$L9",null,{"language":"hlsl","code":"// PBR材质结构\nstruct PBRMaterial {\n    float3 albedo;      // 基础颜色\n    float metallic;     // 金属度\n    float roughness;    // 粗糙度\n    float3 normal;      // 法线\n    float ao;           // 环境遮蔽\n};\n\n// 菲涅尔反射\nfloat3 FresnelSchlick(float cosTheta, float3 F0) {\n    return F0 + (1.0 - F0) * pow(1.0 - cosTheta, 5.0);\n}\n\n// 法线分布函数 (GGX/Trowbridge-Reitz)\nfloat DistributionGGX(float3 N, float3 H, float roughness) {\n    float a = roughness * roughness;\n    float a2 = a * a;\n    float NdotH = max(dot(N, H), 0.0);\n    float NdotH2 = NdotH * NdotH;\n    \n    float num = a2;\n    float denom = (NdotH2 * (a2 - 1.0) + 1.0);\n    denom = 3.14159265 * denom * denom;\n    \n    return num / denom;\n}"}],["$","h3",null,{"children":"阴影映射技术"}],["$","p",null,{"children":"阴影是增强场景真实感的重要技术："}],["$","$L9",null,{"language":"hlsl","code":"// 阴影映射顶点着色器\nstruct ShadowVS_INPUT {\n    float3 Position : POSITION;\n};\n\nstruct ShadowVS_OUTPUT {\n    float4 Position : SV_POSITION;\n    float4 LightSpacePos : TEXCOORD0;\n};\n\ncbuffer LightViewProjection : register(b0) {\n    matrix LightViewMatrix;\n    matrix LightProjectionMatrix;\n};\n\nShadowVS_OUTPUT ShadowVS(ShadowVS_INPUT input) {\n    ShadowVS_OUTPUT output;\n    \n    float4 worldPos = mul(float4(input.Position, 1.0), WorldMatrix);\n    float4 lightViewPos = mul(worldPos, LightViewMatrix);\n    output.Position = mul(lightViewPos, LightProjectionMatrix);\n    output.LightSpacePos = output.Position;\n    \n    return output;\n}"}],["$","h3",null,{"children":"性能优化技巧"}],["$","p",null,{"children":"在HLSL编程中，性能优化至关重要："}],["$","h4",null,{"children":"1. 减少分支语句"}],["$","p",null,{"children":"GPU对分支语句的处理效率较低，尽量使用数学函数替代条件判断。"}],["$","h4",null,{"children":"2. 合理使用精度"}],["$","p",null,{"children":"根据需要选择合适的数据精度，避免不必要的高精度计算。"}],["$","h4",null,{"children":"3. 纹理采样优化"}],["$","p",null,{"children":"合理安排纹理采样顺序，利用GPU的纹理缓存。"}],["$","h3",null,{"children":"总结"}],["$","p",null,{"children":"HLSL着色器编程是现代游戏开发的核心技能之一。通过掌握基础的光照模型、 PBR材质系统和阴影技术，我们可以创造出令人印象深刻的视觉效果。"}],["$","p",null,{"children":"在实际开发中，还需要不断学习新的技术和优化方法， 以适应不断发展的游戏图形技术需求。"}]]}]}]}]}],["$","section",null,{"className":"py-8 bg-black/40 border-t border-white/10","children":["$","div",null,{"className":"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8","children":["$","div",null,{"className":"flex justify-between items-center","children":[["$","div",null,{"children":["$","$L8",null,{"href":"/blog/directx11-rendering-pipeline","className":"text-gray-200 hover:text-white transition-colors","children":"← 上一篇：DirectX 11渲染管线深度解析"}]}],["$","div",null,{"children":["$","$L8",null,{"href":"/blog/physx-integration-guide","className":"text-gray-200 hover:text-white transition-colors","children":"下一篇：PhysX物理引擎集成实战 →"}]}]]}]}]}]]}],["$","footer",null,{"className":"bg-gray-900 border-t border-gray-700 mt-12","children":["$","div",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center","children":[["$","p",null,{"className":"text-sm text-gray-400","children":["© ",2025," HGL博客 - 专注于游戏引擎开发技术分享"]}],["$","div",null,{"className":"mt-2 flex justify-center space-x-4","children":[["$","a",null,{"href":"https://github.com/hgl-pong","className":"text-gray-400 hover:text-white transition-colors text-sm","target":"_blank","rel":"noopener noreferrer","children":"GitHub"}],["$","span",null,{"className":"text-gray-600","children":"•"}],["$","a",null,{"href":"mailto:contact@example.com","className":"text-gray-400 hover:text-white transition-colors text-sm","children":"联系邮箱"}]]}]]}]}]}]],null],"segment":"__PAGE__"},"styles":null}],"segment":"hlsl-shader-programming"},"styles":null}],"segment":"blog"},"styles":null}]}]}]}],null]
3:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"HGL博客 - DirectX与PhysX游戏引擎开发"}],["$","meta","3",{"name":"description","content":"专注DirectX 11图形编程、PhysX物理引擎和C++游戏引擎开发技术分享，记录底层引擎开发心得"}],["$","meta","4",{"name":"author","content":"HGL"}],["$","meta","5",{"name":"keywords","content":"游戏引擎, DirectX 11, PhysX, C++, HLSL, 图形编程, 物理引擎, 游戏开发"}],["$","meta","6",{"property":"og:title","content":"HGL博客 - DirectX与PhysX游戏引擎开发"}],["$","meta","7",{"property":"og:description","content":"专注DirectX 11图形编程、PhysX物理引擎和C++游戏引擎开发技术分享，记录底层引擎开发心得"}],["$","meta","8",{"property":"og:url","content":"https://hgl-pong.github.io/"}],["$","meta","9",{"property":"og:type","content":"website"}],["$","meta","10",{"name":"twitter:card","content":"summary"}],["$","meta","11",{"name":"twitter:title","content":"HGL博客 - DirectX与PhysX游戏引擎开发"}],["$","meta","12",{"name":"twitter:description","content":"专注DirectX 11图形编程、PhysX物理引擎和C++游戏引擎开发技术分享，记录底层引擎开发心得"}],["$","link","13",{"rel":"icon","href":"/icon.ico?566750784894397f","type":"image/x-icon","sizes":"64x64"}]]
6:null
