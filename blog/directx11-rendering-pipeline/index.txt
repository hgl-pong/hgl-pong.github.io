1:HL["/_next/static/css/82b9e9848d5b0bf9.css","style",{"crossOrigin":""}]
0:["8t2DSnwJAkZUrTuRfF7yf",[[["",{"children":["blog",{"children":["directx11-rendering-pipeline",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/82b9e9848d5b0bf9.css","precedence":"next","crossOrigin":""}]],"$L3"]]]]
4:I[6954,[],""]
5:I[7264,[],""]
7:I[6100,["350","static/chunks/350-a118ec5299cf5e8d.js","230","static/chunks/app/blog/directx11-rendering-pipeline/page-4a76de189c1ba9c0.js"],""]
8:I[5846,["350","static/chunks/350-a118ec5299cf5e8d.js","230","static/chunks/app/blog/directx11-rendering-pipeline/page-4a76de189c1ba9c0.js"],""]
9:I[8326,["350","static/chunks/350-a118ec5299cf5e8d.js","230","static/chunks/app/blog/directx11-rendering-pipeline/page-4a76de189c1ba9c0.js"],""]
a:I[848,["350","static/chunks/350-a118ec5299cf5e8d.js","230","static/chunks/app/blog/directx11-rendering-pipeline/page-4a76de189c1ba9c0.js"],""]
b:I[1472,["350","static/chunks/350-a118ec5299cf5e8d.js","230","static/chunks/app/blog/directx11-rendering-pipeline/page-4a76de189c1ba9c0.js"],""]
2:[null,["$","html",null,{"lang":"zh-CN","children":["$","body",null,{"children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","directx11-rendering-pipeline","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L6",[["$","$L7",null,{}],["$","$L8",null,{}],["$","main",null,{"className":"min-h-screen bg-gray-50","children":[["$","section",null,{"className":"bg-white border-b border-gray-200 py-12","children":["$","div",null,{"className":"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8","children":[["$","div",null,{"className":"mb-8","children":["$","$L9",null,{"href":"/blog","className":"inline-flex items-center text-primary-600 hover:text-primary-700 transition-colors","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":20,"height":20,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"mr-2","children":[["$","path","1l729n",{"d":"m12 19-7-7 7-7"}],["$","path","x3x0zl",{"d":"M19 12H5"}],"$undefined"]}],"返回博客列表"]}]}],["$","div",null,{"className":"mb-4","children":["$","span",null,{"className":"inline-block bg-primary-100 text-primary-700 px-3 py-1 rounded-full text-sm font-medium","children":"DirectX"}]}],["$","h1",null,{"className":"text-4xl font-bold text-gray-900 mb-6","children":"DirectX 11渲染管线深度解析"}],["$","div",null,{"className":"flex items-center space-x-6 text-gray-500 mb-8","children":[["$","div",null,{"className":"flex items-center space-x-2","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":18,"height":18,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-user","children":[["$","path","975kel",{"d":"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"}],["$","circle","17ys0d",{"cx":"12","cy":"7","r":"4"}],"$undefined"]}],["$","span",null,{"children":"HGL"}]]}],["$","div",null,{"className":"flex items-center space-x-2","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":18,"height":18,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"2024年1月15日"}]]}],["$","div",null,{"className":"flex items-center space-x-2","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":18,"height":18,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-clock","children":[["$","circle","1mglay",{"cx":"12","cy":"12","r":"10"}],["$","polyline","68esgv",{"points":"12 6 12 12 16 14"}],"$undefined"]}],["$","span",null,{"children":"10分钟阅读"}]]}]]}],["$","div",null,{"className":"flex items-center space-x-2","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":18,"height":18,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"text-gray-400","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex space-x-2","children":[["$","span","DirectX 11",{"className":"bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm","children":"DirectX 11"}],["$","span","渲染管线",{"className":"bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm","children":"渲染管线"}],["$","span","HLSL",{"className":"bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm","children":"HLSL"}]]}]]}]]}]}],["$","section",null,{"className":"py-12","children":["$","div",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8","children":["$","div",null,{"className":"flex gap-8","children":[["$","div",null,{"className":"flex-1 max-w-4xl","children":["$","div",null,{"className":"bg-white rounded-lg shadow-sm border border-gray-200 p-8","children":["$","div",null,{"className":"prose max-w-none","children":[["$","h2",null,{"id":"overview","children":"DirectX 11渲染管线概述"}],["$","p",null,{"children":"DirectX 11的渲染管线是现代图形编程的核心，它定义了从3D几何数据到最终像素输出的完整流程。 理解渲染管线的每个阶段对于开发高性能的游戏引擎至关重要。"}],["$","h3",null,{"id":"stages","children":"渲染管线的主要阶段"}],["$","p",null,{"children":"DirectX 11渲染管线包含以下主要阶段："}],["$","ol",null,{"children":[["$","li",null,{"children":[["$","strong",null,{"children":"输入装配器 (Input Assembler)"}]," - 读取顶点和索引数据"]}],["$","li",null,{"children":[["$","strong",null,{"children":"顶点着色器 (Vertex Shader)"}]," - 处理每个顶点"]}],["$","li",null,{"children":[["$","strong",null,{"children":"曲面细分 (Tessellation)"}]," - 可选的几何细分阶段"]}],["$","li",null,{"children":[["$","strong",null,{"children":"几何着色器 (Geometry Shader)"}]," - 可选的几何处理阶段"]}],["$","li",null,{"children":[["$","strong",null,{"children":"光栅化 (Rasterization)"}]," - 将几何图元转换为像素"]}],["$","li",null,{"children":[["$","strong",null,{"children":"像素着色器 (Pixel Shader)"}]," - 计算每个像素的颜色"]}],["$","li",null,{"children":[["$","strong",null,{"children":"输出合并 (Output Merger)"}]," - 最终的像素输出和混合"]}]]}],["$","h3",null,{"id":"input-assembler","children":"输入装配器阶段"}],["$","p",null,{"children":"输入装配器负责从内存中读取顶点数据，并将其组装成图元（点、线、三角形）。"}],["$","pre",null,{"children":["$","code",null,{"children":"// 创建顶点缓冲区\nstruct Vertex {\n    DirectX::XMFLOAT3 position;\n    DirectX::XMFLOAT3 normal;\n    DirectX::XMFLOAT2 texCoord;\n};\n\n// 顶点数据\nVertex vertices[] = {\n    { {-1.0f, -1.0f, 0.0f}, {0.0f, 0.0f, -1.0f}, {0.0f, 1.0f} },\n    { { 1.0f, -1.0f, 0.0f}, {0.0f, 0.0f, -1.0f}, {1.0f, 1.0f} },\n    { { 0.0f,  1.0f, 0.0f}, {0.0f, 0.0f, -1.0f}, {0.5f, 0.0f} }\n};\n\n// 创建缓冲区描述\nD3D11_BUFFER_DESC bufferDesc = {};\nbufferDesc.Usage = D3D11_USAGE_DEFAULT;\nbufferDesc.ByteWidth = sizeof(vertices);\nbufferDesc.BindFlags = D3D11_BIND_VERTEX_BUFFER;\n\n// 初始化数据\nD3D11_SUBRESOURCE_DATA initData = {};\ninitData.pSysMem = vertices;\n\n// 创建顶点缓冲区\nID3D11Buffer* vertexBuffer;\ndevice->CreateBuffer(&bufferDesc, &initData, &vertexBuffer);"}]}],["$","h3",null,{"id":"vertex-shader","children":"顶点着色器阶段"}],["$","p",null,{"children":"顶点着色器对每个顶点执行变换操作，通常包括模型-视图-投影变换。"}],["$","pre",null,{"children":["$","code",null,{"children":"// HLSL顶点着色器示例\ncbuffer ConstantBuffer : register(b0) {\n    matrix World;\n    matrix View;\n    matrix Projection;\n};\n\nstruct VS_INPUT {\n    float3 Position : POSITION;\n    float3 Normal : NORMAL;\n    float2 TexCoord : TEXCOORD0;\n};\n\nstruct VS_OUTPUT {\n    float4 Position : SV_POSITION;\n    float3 WorldPos : POSITION;\n    float3 Normal : NORMAL;\n    float2 TexCoord : TEXCOORD0;\n};\n\nVS_OUTPUT VS(VS_INPUT input) {\n    VS_OUTPUT output;\n    \n    // 世界变换\n    float4 worldPos = mul(float4(input.Position, 1.0f), World);\n    output.WorldPos = worldPos.xyz;\n    \n    // 视图变换\n    float4 viewPos = mul(worldPos, View);\n    \n    // 投影变换\n    output.Position = mul(viewPos, Projection);\n    \n    // 变换法线\n    output.Normal = mul(input.Normal, (float3x3)World);\n    \n    // 传递纹理坐标\n    output.TexCoord = input.TexCoord;\n    \n    return output;\n}"}]}],["$","h3",null,{"id":"pixel-shader","children":"像素着色器阶段"}],["$","p",null,{"children":"像素着色器计算每个像素的最终颜色，通常包括光照计算和纹理采样。"}],["$","pre",null,{"children":["$","code",null,{"children":"// HLSL像素着色器示例\nTexture2D DiffuseTexture : register(t0);\nSamplerState Sampler : register(s0);\n\ncbuffer LightBuffer : register(b1) {\n    float3 LightDirection;\n    float3 LightColor;\n    float3 AmbientColor;\n};\n\nstruct PS_INPUT {\n    float4 Position : SV_POSITION;\n    float3 WorldPos : POSITION;\n    float3 Normal : NORMAL;\n    float2 TexCoord : TEXCOORD0;\n};\n\nfloat4 PS(PS_INPUT input) : SV_TARGET {\n    // 采样漫反射纹理\n    float4 textureColor = DiffuseTexture.Sample(Sampler, input.TexCoord);\n    \n    // 标准化法线\n    float3 normal = normalize(input.Normal);\n    \n    // 计算漫反射光照\n    float NdotL = max(0.0f, dot(normal, -LightDirection));\n    float3 diffuse = LightColor * NdotL;\n    \n    // 组合环境光和漫反射光\n    float3 finalColor = (AmbientColor + diffuse) * textureColor.rgb;\n    \n    return float4(finalColor, textureColor.a);\n}"}]}],["$","h3",null,{"id":"optimization","children":"性能优化技巧"}],["$","p",null,{"children":"在DirectX 11渲染管线中，有几个关键的性能优化点："}],["$","h4",null,{"children":"1. 减少状态切换"}],["$","p",null,{"children":"频繁的状态切换会导致GPU流水线停顿，应该尽量批量处理相同状态的渲染调用。"}],["$","h4",null,{"children":"2. 使用常量缓冲区"}],["$","p",null,{"children":"合理组织常量缓冲区的数据布局，避免频繁更新。"}],["$","h4",null,{"children":"3. 实例化渲染"}],["$","p",null,{"children":"对于大量相似对象，使用实例化渲染可以显著提高性能。"}],["$","h3",null,{"id":"summary","children":"总结"}],["$","p",null,{"children":"DirectX 11渲染管线为开发者提供了强大而灵活的图形渲染能力。通过深入理解每个阶段的工作原理， 我们可以编写出高效的渲染代码，创造出令人印象深刻的视觉效果。"}],["$","p",null,{"children":"在实际的游戏引擎开发中，还需要考虑更多的优化技术，如延迟渲染、阴影映射、后处理效果等。 这些高级技术都建立在对基础渲染管线的深入理解之上。"}]]}]}]}],["$","div",null,{"className":"hidden lg:block w-80","children":["$","$La",null,{"headings":[{"id":"overview","title":"DirectX 11渲染管线概述","level":2},{"id":"stages","title":"渲染管线的主要阶段","level":3},{"id":"input-assembler","title":"输入装配器阶段","level":3},{"id":"vertex-shader","title":"顶点着色器阶段","level":3},{"id":"pixel-shader","title":"像素着色器阶段","level":3},{"id":"optimization","title":"性能优化技巧","level":3},{"id":"summary","title":"总结","level":3}]}]}]]}]}]}],["$","section",null,{"className":"py-8 bg-white border-t border-gray-200","children":["$","div",null,{"className":"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8","children":["$","div",null,{"className":"flex justify-between items-center","children":[["$","div",null,{"children":["$","$L9",null,{"href":"/blog/physx-integration-guide","className":"text-primary-600 hover:text-primary-700 transition-colors","children":"← 上一篇：PhysX物理引擎集成实战"}]}],["$","div",null,{"children":["$","$L9",null,{"href":"/blog/hlsl-shader-programming","className":"text-primary-600 hover:text-primary-700 transition-colors","children":"下一篇：HLSL着色器编程技巧 →"}]}]]}]}]}]]}],["$","footer",null,{"className":"bg-gray-900 text-white","children":["$","div",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12","children":[["$","div",null,{"className":"grid md:grid-cols-4 gap-8","children":[["$","div",null,{"className":"md:col-span-2","children":[["$","h3",null,{"className":"text-2xl font-bold mb-4","children":"HGL博客"}],["$","p",null,{"className":"text-gray-300 mb-4 max-w-md","children":"专注于DirectX 11和PhysX游戏引擎开发，记录C++底层编程和引擎架构的学习心得。 希望我的经验能帮助到更多的游戏开发者朋友。"}],["$","div",null,{"className":"flex space-x-4","children":[["$","a",null,{"href":"https://github.com","target":"_blank","rel":"noopener noreferrer","className":"text-gray-300 hover:text-white transition-colors","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-github","children":[["$","path","tonef",{"d":"M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"}],["$","path","9comsn",{"d":"M9 18c-4.51 2-5-2-7-2"}],"$undefined"]}]}],["$","a",null,{"href":"mailto:contact@example.com","className":"text-gray-300 hover:text-white transition-colors","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-mail","children":[["$","rect","18n3k1",{"width":"20","height":"16","x":"2","y":"4","rx":"2"}],["$","path","1ocrg3",{"d":"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"}],"$undefined"]}]}]]}]]}],["$","div",null,{"children":[["$","h4",null,{"className":"text-lg font-semibold mb-4","children":"快速链接"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","a",null,{"href":"/","className":"text-gray-300 hover:text-white transition-colors","children":"首页"}]}],["$","li",null,{"children":["$","a",null,{"href":"/blog","className":"text-gray-300 hover:text-white transition-colors","children":"博客"}]}],["$","li",null,{"children":["$","a",null,{"href":"/about","className":"text-gray-300 hover:text-white transition-colors","children":"关于"}]}],["$","li",null,{"children":["$","a",null,{"href":"/contact","className":"text-gray-300 hover:text-white transition-colors","children":"联系"}]}]]}]]}],["$","div",null,{"children":[["$","h4",null,{"className":"text-lg font-semibold mb-4","children":"技术分类"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","a",null,{"href":"/blog?category=directx","className":"text-gray-300 hover:text-white transition-colors","children":"DirectX 11"}]}],["$","li",null,{"children":["$","a",null,{"href":"/blog?category=physx","className":"text-gray-300 hover:text-white transition-colors","children":"PhysX物理"}]}],["$","li",null,{"children":["$","a",null,{"href":"/blog?category=hlsl","className":"text-gray-300 hover:text-white transition-colors","children":"HLSL着色器"}]}],["$","li",null,{"children":["$","a",null,{"href":"/blog?category=cpp","className":"text-gray-300 hover:text-white transition-colors","children":"C++引擎"}]}]]}]]}]]}],["$","div",null,{"className":"border-t border-gray-800 mt-8 pt-8 flex flex-col md:flex-row justify-between items-center","children":[["$","p",null,{"className":"text-gray-300 text-sm","children":["© ",2025," HGL博客. 保留所有权利."]}],["$","p",null,{"className":"text-gray-300 text-sm flex items-center mt-4 md:mt-0","children":["Made with ",["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":16,"height":16,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"mx-1 text-red-500","children":[["$","path","c3ymky",{"d":"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z"}],"$undefined"]}]," using Next.js"]}]]}]]}]}],["$","$Lb",null,{}]],null],"segment":"__PAGE__"},"styles":null}],"segment":"directx11-rendering-pipeline"},"styles":null}],"segment":"blog"},"styles":null}]}]}]}],null]
3:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"HGL博客 - DirectX与PhysX游戏引擎开发"}],["$","meta","3",{"name":"description","content":"专注DirectX 11图形编程、PhysX物理引擎和C++游戏引擎开发技术分享，记录底层引擎开发心得"}],["$","meta","4",{"name":"author","content":"HGL"}],["$","meta","5",{"name":"keywords","content":"游戏引擎, DirectX 11, PhysX, C++, HLSL, 图形编程, 物理引擎, 游戏开发"}],["$","meta","6",{"property":"og:title","content":"HGL博客 - DirectX与PhysX游戏引擎开发"}],["$","meta","7",{"property":"og:description","content":"专注DirectX 11图形编程、PhysX物理引擎和C++游戏引擎开发技术分享，记录底层引擎开发心得"}],["$","meta","8",{"property":"og:type","content":"website"}],["$","meta","9",{"name":"twitter:card","content":"summary"}],["$","meta","10",{"name":"twitter:title","content":"HGL博客 - DirectX与PhysX游戏引擎开发"}],["$","meta","11",{"name":"twitter:description","content":"专注DirectX 11图形编程、PhysX物理引擎和C++游戏引擎开发技术分享，记录底层引擎开发心得"}]]
6:null
